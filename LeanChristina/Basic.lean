import Mathlib
import Mathlib.Data.Opposite

open CategoryTheory CategoryTheory.Category CategoryTheory.Limits Opposite

variable {A B C : Type} [Category A] [Category B] [Category C]

structure RatCat (profunctor : A โฅค Bแตแต โฅค C) where
  over : A
  under : B

def CategoryTheory.Functor.obj2 (profunctor : A โฅค B โฅค C) : A โ B โ C :=
  ฮป ฮฑ ฮฒ => (profunctor.obj ฮฑ).obj ฮฒ

def RatCat.mkHom {P : A โฅค Bแตแต โฅค C} (ฯ ฯ : RatCat P) : Type :=
  P.obj2 ฯ.over (op ฯ.under) โถ P.obj2 ฯ.over (op ฯ.under)

instance {P : A โฅค Bแตแต โฅค C} : Category (RatCat P) where
  Hom := ฮป ฯ ฯ => RatCat.mkHom ฯ ฯ
  id ฯ := ๐ (P.obj2 ฯ.over (op ฯ.under))
  comp := by simp
